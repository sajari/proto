syntax = "proto3";

package sajari.pipeline.v2;

import "sajari/pipeline/v2/pipeline.proto";
import "sajari/pipeline/v2/admin.proto";

import "google/protobuf/timestamp.proto";

option go_package = "code.sajari.com/protogen-go/sajari/pipeline/v2;pipelinepb";

// Documentation provides information on steps and pipelines.
service Documentation {
  // GetPipelineDocumentation.
  rpc GetPipelineDocumentation (GetPipelineDocumentationRequest) returns (GetPipelineDocumentationResponse);

  // List step templates that can be used in creating pipelines.
  rpc ListStepTemplates(ListStepTemplatesRequest) returns (ListStepTemplatesResponse);

  // Get step template documentation.
  rpc GetStepTemplateDocumentation(GetStepTemplateDocumentationRequest) returns (GetStepTemplateDocumentationResponse);
}

message GetPipelineDocumentationRequest {
  TypeIdentifier pipeline = 1;
}

// Usage is a message containing usage information for a query pipeline.
message GetPipelineDocumentationResponse {
  // Identifier for pipeline.
  TypeIdentifier pipeline = 1;

  // Title.
  string title = 2;

  // Description.
  string description = 3;

  // Steps that will be run.
  repeated Steps steps = 4;

  // List of input parameters used in the pipeline.
  repeated Parameter inputs = 5;

  // List of output parameters returned by the pipeline.
  repeated Parameter outputs = 6;

  // Time that the pipeline was created.
  google.protobuf.Timestamp create_time = 7;
}

message Steps {
  // Step type determines when the steps will be run.
  StepType step_type = 1;

  // List of steps to run.
  repeated Step steps = 2;
}

// Parameter defines a parameter used in pipelines to pass user-defined values.
// It can be configured by the pipeline creater.
message Parameter {
  // Identifier for this parameter (from the step template).
  string identifier = 1;

  // Name of the parameter in this pipeline.
  string name = 2;

  // Type of the pipeline parameter (from the step template).
  string type = 3;

  // Description for the paramter in this pipeline.
  string description = 4;

  // Default value of the parameter in this pipeline.
  string default_value = 5;
}

// Constant defines a constant used in a pipeline step. The value can be set by
// the pipeline creator but cannot be changed by the caller.
message Constant {
  // Name of the constant (from the step template).
  string name = 1;

  // Type of the constant (from the step template).
  string type = 2;

  // Description informtion for the constant (from the step template).
  string description = 3;

  // Value of the constant in this pipeline.
  string value = 4;
}

// Step represents a single unit of work performed by a pipeline.  Every pipeline
// step is based on a StepTemplate defined by the system. Pipeline creators
// override template values to customise the step to their needs.
message Step {
  // Type of pipeline this step applies to (from the step template).
  Type type = 1;

  // Type of step (from the step template).
  repeated StepType step_types = 2;

  // Identifier of this step (from the step template).
  string identifier = 3;

  // Title of step in this pipeline.
  string title = 4;

  // Description of the step in this pipeline.
  string description = 5;

  // Long description of the step.
  string long_description = 12;

  // List of input parameters used by the step.
  repeated Parameter inputs = 6;

  // List of output parameters returned by the step.
  repeated Parameter outputs = 7;

  // List of constants used by the step.
  repeated Constant constants = 8;

  // Condition that must pass for the step to be run.
  string condition = 9;

  // Annotations added to the request when the step is run.
  repeated string annotations = 10;
}

// ListStepTemplatesRequest is used to request a listing of step templates.
message ListStepTemplatesRequest {
  // Type of pipeline steps to list (query/record).
  Type type = 1;

  // Step types to list (pre/post).
  StepType step_type = 2;

  // The maximum number of steps to return.
  int32 page_size = 3;

  // The `next_page_token` value returned from a previous List request, if any.
  string page_token = 4;
}

// ListStepsResponse contains a list of steps.
message ListStepTemplatesResponse {
  // List of steps.
  repeated Step step_templates = 1;

  // The next page token.
  string next_page_token = 2;
}

// GetStepDocumentationRequest
message GetStepTemplateDocumentationRequest {
  // Type of pipeline to fetch step for.
  Type type = 1;

  // Identifier for step template.
  string identifier = 2;
}

// GetStepDocumentationResponse
message GetStepTemplateDocumentationResponse {
  Step step_template = 1;
}
